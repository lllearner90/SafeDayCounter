#!/bin/bash

# Function to display usage
usage() {
    echo "Usage: $0 -p <port_range> -c <name>"
    echo "Options:"
    echo "  -p <port_map>: Port mapping in the form 'start_port:end_port'"
    echo "  -c <name>: Container services (check services in docker-compose.yaml)"
    exit 1
}

while getopts "pc" Option
do
    case $Option in
    p) port_map="$port_map - p $OPTARG";;
    c) service="$OPTARG";;
    *) Usage ;;
    esac
done

echo "Spawning container ${service}"
gitRootPath=$(git rev-parse --show-toplevel)
echo "${gitRootPath}"
compose_file=$gitRootPath/setup/docker-compose.yaml


shift $((OPTIND-1))

docker_cmd=$*

case "$(uname -s)" in
    MSYS*|MINGW*)
        WIN_TTY=winpty
        ;;
    CYGWIN*|LINUX|Linux)
        WIN_TTY=''
        ;;
    *)
        echo "unsupported bash interpreter $(uname -s)"
        exit 1
        ;;
esac

# create an empty cinfig, if it doesnot exist
[ ! -f ~/.ssh/config ] && {
    echo "Warning: ~/.ssh/config doesnot exist"
    touch ~/.ssh/config
}

[ ! -f ~/.gitconfig ] && {
    echo "Error: ~/.gitconfig doesnot exist"
}

[ ! -f ~/.docker_bash_history ] && {
    echo "Warning: ~/.docker_bash_history doesnot exist, file created automatically"
    touch ~/.docker_bash_history
}

[ ! -f ~/.docker_bashrc ] && {
    echo "Warning: ~/.docker_bashrc doesnot exist, file created automatically"
    touch ~/.docker_bashrc
}
# echo "docker-compose -f $compose_file run --rm $service $docker_cmd"
$WIN_TTY docker compose -f $compose_file run --rm $service $docker_cmd
